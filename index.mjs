// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-minstd@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-minstd-shuffle@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-mt19937@esm/index.mjs";var l={name:"mt19937",copy:!0},c={};c.minstd=a,c["minstd-shuffle"]=m,c.mt19937=p;var f=c,h=e,j=t,u=n,v=s,y=r.isPrimitive,b=i,g=o,w=d,x=l,N=f;var E=function(e){var t,n,s;if(t={name:x.name,copy:x.copy},arguments.length){if(!v(e))throw new TypeError(w("invalid argument. Must provide an object. Value: `%s`.",e));if(b(e,"name")&&(t.name=e.name),b(e,"state")){if(t.state=e.state,void 0===t.state)throw new TypeError(w("invalid option. `%s` option cannot be undefined. Option: `%s`.","state",t.state))}else if(b(e,"seed")&&(t.seed=e.seed,void 0===t.seed))throw new TypeError(w("invalid option. `%s` option cannot be undefined. Option: `%s`.","seed",t.seed));if(b(e,"copy")&&(t.copy=e.copy,!y(t.copy)))throw new TypeError(w("invalid option. `%s` option must be a boolean. Option: `%s`.","copy",t.copy))}if(void 0===(s=N[t.name]))throw new Error(w("invalid option. Unrecognized/unsupported PRNG. Option: `%s`.",t.name));return n=void 0===t.state?void 0===t.seed?s.factory():s.factory({seed:t.seed}):s.factory({state:t.state,copy:t.copy}),h(l,"NAME","randu"),j(l,"seed",r),j(l,"seedLength",i),u(l,"state",a,m),j(l,"stateLength",o),j(l,"byteLength",d),h(l,"toJSON",p),h(l,"PRNG",n),h(l,"MIN",n.normalized.MIN),h(l,"MAX",n.normalized.MAX),l;function r(){return n.seed}function i(){return n.seedLength}function o(){return n.stateLength}function d(){return n.byteLength}function a(){return n.state}function m(e){n.state=e}function p(){var e={type:"PRNG"};return e.name=l.NAME+"-"+n.NAME,e.state=g(n.state),e.params=[],e}function l(){return n.normalized()}},M=E(),L=E;e(M,"factory",L);var A=M;export{A as default,L as factory};
//# sourceMappingURL=index.mjs.map
